buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'

	}

	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')

	}
}
plugins {
	id "org.asciidoctor.convert" version "1.5.2"
}


ext {
	snippetsDir = file('build/generated-snippets')
}

group= 'epam'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'docker'

task buildDocker(type: Docker, dependsOn: build) {
	push = false
	applicationName = jar.baseName
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}

asciidoctor {
	attributes 'snippets': snippetsDir
	inputs.dir snippetsDir
	dependsOn test
}

jar {
	baseName = 'midserver'
	version = '0.0.1-SNAPSHOT'
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}


test {
	outputs.dir snippetsDir
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.cloud:spring-cloud-starter')
	compile('org.springframework.cloud:spring-cloud-starter-eureka')
	compile('org.springframework.boot:spring-boot-starter-data-cassandra')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.projectlombok:lombok')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('net.logstash.logback:logstash-logback-encoder:4.6')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:1.1.2.RELEASE'}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.SR1"
	}
}
